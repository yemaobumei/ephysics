[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "笔耕不辍\n\n\n Back to top"
  },
  {
    "objectID": "posts/matplot_animate/index.html",
    "href": "posts/matplot_animate/index.html",
    "title": "matplotlib 动画",
    "section": "",
    "text": "matplot animation的一个例子\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib import animation\ndef update_points_v3(num):\n    point_ani.set_data([x[num]], [y[num]])\n    if num % 5 == 0:\n        point_ani.set_marker(\"*\")\n        point_ani.set_markersize(12)\n    else:\n        point_ani.set_marker(\"o\")\n        point_ani.set_markersize(8)\n    text_pt.set_position((x[num], y[num]))\n    text_pt.set_text(\"x=%.2f, y=%.2f\" % (x[num], y[num]))\n    return point_ani, text_pt,\n\ndef test3():\n    global x,y,point_ani,text_pt\n    x = np.linspace(0, 2 * np.pi, 100)\n    y = np.cos(x)\n    fig = plt.figure()\n    plt.plot(x, y)\n    point_ani, = plt.plot(x[0], y[0], \"ro\")\n    plt.grid(ls=\"--\")\n    text_pt = plt.text(4, 0.8, '', fontsize=16)\n    ani = animation.FuncAnimation(fig, update_points_v3, np.arange(0, 100), interval=100, blit=True)\n    ani.save('cos_test3.gif', writer='pillow', fps=10)\n    # plt.show()\n    plt.close()\ntest3()    \n\n\n测试\n\n\n\n动画示意图\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "posts/等量异种电荷电场/index.html",
    "href": "posts/等量异种电荷电场/index.html",
    "title": "等量异种电荷电场",
    "section": "",
    "text": "For a demonstration of a line plot on a polar axis, see Figure 1.\n\n\nCode\nfrom matplotlib.tri import (Triangulation, UniformTriRefiner, CubicTriInterpolator)\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom numpy import vectorize,pi\nfrom scipy.integrate import quad\n\na=1. #圆环半径\nq=1. #带电量\neps=1e-5 #防止奇点附近值过大\nd_phi=lambda theta,x,y,z : q/np.sqrt((x-a*np.cos(theta))**2+(y-a*np.sin(theta))**2+z**2+eps)\n\n#利用vectorize装饰器一次传入一组x,y,z值作为参数进行积分\n@vectorize\ndef Quad(f_handle,x,y,z):\n    return quad(f_handle,0,2*pi,args=(x,y,z))[0]\n\nn_angles = 30 #角度划分数目\nn_radii = 20 #极径划分数目\nmin_radius = 0.1*a #最小极径\nradii = np.linspace(min_radius, 1.9*a, n_radii)\nangles = np.linspace(0, 2 * np.pi, n_angles, endpoint=False)\nangles = np.repeat(angles[..., np.newaxis], n_radii, axis=1) #...和newaxis都是索引的高级写法，具体作用参见https://numpy.org/doc/stable/reference/arrays.indexing.html\nangles[:, 1::2] += np.pi / n_angles #每隔一圈点将数据点旋转过一个最小角度，使得点之间错开从而更好看（amazing）\n\n#x,y坐标以及对应的电势\nx = np.concatenate(((radii*np.cos(angles)).flatten()+a,(radii*np.cos(angles)).flatten()-a),axis=0)\ny = np.concatenate(((radii*np.sin(angles)).flatten(),(radii*np.sin(angles)).flatten()),axis=0)\nV = Quad(d_phi,x,0,y) #这里实际上是把y坐标取为0，y作为z轴坐标传入的\n\ntriang = Triangulation(x, y) #对x,y代表的点进行三角剖分，默认进行Delaunay三角剖分\ntriang.set_mask( #掩蔽奇点，这里是圆环xoz截面处所在的两个点附近的点\n    np.logical_or(\n    np.hypot(x[triang.triangles].mean(axis=1)+a,y[triang.triangles].mean(axis=1))&lt; 0.1*a,\n    np.hypot(x[triang.triangles].mean(axis=1)-a,y[triang.triangles].mean(axis=1))&lt; 0.1*a,\n    )\n)\n\n#对三角网格进行细分、插值\nrefiner = UniformTriRefiner(triang) #针对前面定义的三角网格triang新建一个refiner\ntri_refi, z_test_refi = refiner.refine_field(V, subdiv=3) #将每个三角形细分为4**subdiv个小三角，refine data，默认使用三次插值器\ntci = CubicTriInterpolator(triang, -V) #用于对电势的负值进行插值的三次插值器\n(Ex, Ey) = tci.gradient(triang.x, triang.y) #计算电势的负梯度\nE_norm = np.sqrt(Ex**2 + Ey**2)\n\nfig, ax = plt.subplots(figsize=(10,10),facecolor='w')\nax.set_aspect('equal')\nax.use_sticky_edges = False\nax.margins(0.07)\n\n# tpc = ax.tripcolor(triang, V, shading='gouraud') #绘制Pseudocolor plots, 但是并不好看\nax.triplot(triang, color='0.8') #绘制三角网格\nlevels = np.arange(0., 20., 0.5) #绘制的等值线的值分布数组\nax.tricontour(tri_refi, z_test_refi, levels=levels, cmap='hot',\n              linewidths=[2.0, 1.0, 1.0, 1.0]) #使用前面refine过后的数据绘制等值线图\nax.quiver(triang.x, triang.y, Ex/E_norm, Ey/E_norm,\n          units='xy', scale=10., zorder=3, color='blue',\n          width=0.007, headwidth=3., headlength=4.) #绘制电场强度矢量，这里进行了normalize，所有箭头长度相同\nax.set_title('Gradient plot in the xoz plane of a wire coil')\nfig.savefig('xoz.png',dpi=120)\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1: A line plot on a polar axis\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "posts/修改quarto中katex默认js文件/index.html",
    "href": "posts/修改quarto中katex默认js文件/index.html",
    "title": "修改quarto中katex默认js文件地址",
    "section": "",
    "text": "quarto默认生成的html文件引用js,css地址是\nhttps://cdn.jsdelivr.net/npm/katex@0.15.1/dist/katex.min.js https://cdn.jsdelivr.net/npm/katex@0.15.1/dist/katex.min.css\n这两个地址国外ip，网速很慢或者访问不到，因此需要修改成更好用的链接，具体方法如下\n\n_quarto.yml 加入一段\nformat:\n  html:\n    theme: flatly\n    css: styles.css\n    html-math-method:\n      method: katex\n      url: \"https://cdn.bootcss.com/KaTeX/0.11.1/\"\nurl也可以改成本地的js和css文件\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "posts/matplot_demo/index.html",
    "href": "posts/matplot_demo/index.html",
    "title": "matplotlib demo",
    "section": "",
    "text": "For a demonstration of a line plot on a polar axis, see Figure 1.\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1: A line plot on a polar axis\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "posts/将quarto部署到云服务器/index.html",
    "href": "posts/将quarto部署到云服务器/index.html",
    "title": "将quarto部署到云服务器",
    "section": "",
    "text": "quarto官网默认publish的几个静态服务商，国内访问很慢。因此利用自己购买的云服务器 部署静态服务器。将quarto本地笔记自动更新到云服务器。这样就快很多。\n1.git项目代码\ncd ~/  #切换到主目录\ngit clone   \"ssh@.....\"\n2.首先服务器配置,环境ubuntu20.24\n#安装web服务\nsudo apt install nginx\n#配置nginx代理\ncd /etc/nginx/site-enabled\nvi default\n##加入自己的配置\n#       server_name  1.1.1.1  #可以是ip，也可以是自购的域名\n#       location /blog {     #将  ip/blog 指向quarto生成网页文件夹\n#           alias /home/ubuntu/ephysics/_site/;  #路径看你具体存放在哪\n#}\nnginx -t ##测试配置是否成功\nsudo nginx reload ## 重启nginx服务\n浏览器输入 服务器ip/blog\n查看是否看到首页\n3.利用crontab 自动更新git仓库\ncrontab -e \n##在末尾加入下面一行，设置每分钟自动拉取远程仓库一次 \n* * * * * cd /home/ubuntu/ephysics  && git pull origin master\n\n\n\n Back to top"
  },
  {
    "objectID": "posts/自己域名绑定githubpages/index.html",
    "href": "posts/自己域名绑定githubpages/index.html",
    "title": "如何绑定自己的域名到用户名.github.io",
    "section": "",
    "text": "根目录下创建CNAME，push上传\ntouch CNAME\n\"ephys.cn\" &gt;&gt; CNMAE\n\n\n域名解析\n主机记录 记录类型 记录值\nwww CNAME github用户名.github.io\n@ CNAME github用户名.github.io\n等待1-2分钟DNS解析生效\n\n\n\n\n Back to top"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts.\n欢迎大家来到我的博客👏\n实验"
  },
  {
    "objectID": "posts/welcome/index.html#python代码",
    "href": "posts/welcome/index.html#python代码",
    "title": "Welcome To My Blog",
    "section": "python代码",
    "text": "python代码\ndef f(x):\n    s = 0\n    for i in range(x):\n        s += i\n    return s\n\n  f(x) = \\frac{1}{2} \\sum_{j=1}^\\infty \\int_0^1 \\sin^2(j x) dt .\n\n \\alpha_1 \n\n解决quarto找不到本地pyhton问题\npowershell 设置永久环境变量\nsetx QUARTO_PYTHON \"D:\\Python3.11.0\\python.exe\" // 永久设置环境变量(用户)"
  },
  {
    "objectID": "posts/让圆动起来/index.html",
    "href": "posts/让圆动起来/index.html",
    "title": "让球沿轨道动起来",
    "section": "",
    "text": "matplot 让球沿着圆轨道运动\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.animation as animation\n\n##定义一些常量，比如轨道的半径，球心位置。\nx0,y0 = 0,0\nr = 10\nr_ball = 0.5\nT = 5\n\n##定义画布\nfig,ax = plt.subplots()\nax.set_xlim(-r*1.2,r*1.2)\nax.set_ylim(-r*1.2,r*1.2)\nax.set_aspect('equal') #画布成正方形\nax.axis('off') #不显示坐标轴\n\n##定义圆\ncircle = plt.Circle((x0,y0),r_ball,color='y',fill=True)\ncircle_guidao = plt.Circle((x0,y0),r,color='red',fill=False)\nax.add_artist(circle)\nax.add_artist(circle_guidao)\n\n##定义更新函数，更新每一帧圆的位置\ndef update(frame):\n    x = x0+(r-r_ball)*np.cos(2*np.pi*frame/T)\n    y = y0+(r-r_ball)*np.sin(2*np.pi*frame/T)\n    circle.set_center((x,y))\n    return circle,\n\n# 创建动画\nanim = animation.FuncAnimation(fig, update, frames=np.arange(0, 10, 0.1), interval=50,blit=True)\nanim.save('fig.gif', writer='pillow', fps=10) \n# 显示动画\n# plt.show()\nplt.close()\n\n\n\n\n\n动画\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Stack",
    "section": "",
    "text": "Welcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nOct 27, 2024\n\n\n叶叶叶\n\n\n\n\n\n\n\n\n\n\n\n\n解决匀变速直线问题的一般方法\n\n\n\n\n\n\n物理教学\n\n\n\n\n\n\n\n\n\nApr 20, 2024\n\n\nstack\n\n\n\n\n\n\n\n\n\n\n\n\n游泳是怎么前进的？\n\n\n\n\n\n\n生活中的物理\n\n\n\n\n\n\n\n\n\nMar 28, 2024\n\n\n叶叶叶\n\n\n\n\n\n\n\n\n\n\n\n\ndocker部署django网站（二）\n\n\n\n\n\n\nDjango\n\n\ndocker\n\n\n\n\n\n\n\n\n\nMar 27, 2024\n\n\nstack\n\n\n\n\n\n\n\n\n\n\n\n\ndocker部署django网站（一）\n\n\n\n\n\n\nDjango\n\n\ndocker\n\n\n\n\n\n\n\n\n\nMar 25, 2024\n\n\nstack\n\n\n\n\n\n\n\n\n\n\n\n\n校园网22端口被封ssh无法连接服务器\n\n\n\n\n\n\nssh\n\n\n\n\n\n\n\n\n\nMar 15, 2024\n\n\nstack\n\n\n\n\n\n\n\n\n\n\n\n\ndjango网站部署到服务器\n\n\n\n\n\n\nDjango\n\n\n\n\n\n\n\n\n\nMar 14, 2024\n\n\nstack\n\n\n\n\n\n\n\n\n\n\n\n\n将quarto部署到云服务器\n\n\n\n\n\n\nquarto\n\n\n\n\n\n\n\n\n\nMar 13, 2024\n\n\nstack\n\n\n\n\n\n\n\n\n\n\n\n\nMac使用pyenv控制python版本\n\n\n\n\n\n\npython\n\n\n\n\n\n\n\n\n\nMar 13, 2024\n\n\nstack\n\n\n\n\n\n\n\n\n\n\n\n\n让球沿轨道动起来\n\n\n\n\n\n\nmatplot\n\n\n\n\n\n\n\n\n\nMar 11, 2024\n\n\nstack\n\n\n\n\n\n\n\n\n\n\n\n\npython数值求解微分方程\n\n\n\n\n\n\nmatplot\n\n\n\n\n\n\n\n\n\nMar 10, 2024\n\n\n叶叶叶\n\n\n\n\n\n\n\n\n\n\n\n\n竖直圆轨道\n\n\n\n\n\n\nmatplot\n\n\n\n\n\n\n\n\n\nMar 10, 2024\n\n\n叶叶叶\n\n\n\n\n\n\n\n\n\n\n\n\nmatplotlib 动画\n\n\n\n\n\n\nmatplot\n\n\n\n\n\n\n\n\n\nMar 7, 2024\n\n\n叶叶叶\n\n\n\n\n\n\n\n\n\n\n\n\n修改quarto中katex默认js文件地址\n\n\n\n\n\n\nquarto\n\n\n\n\n\n\n\n\n\nMar 6, 2024\n\n\nstack\n\n\n\n\n\n\n\n\n\n\n\n\n等量异种电荷电场\n\n\n\n\n\n\nmatplot\n\n\n\n\n\n\n\n\n\nMar 6, 2024\n\n\nstack\n\n\n\n\n\n\n\n\n\n\n\n\n如何绑定自己的域名到用户名.github.io\n\n\n\n\n\n\nGithub\n\n\n\n\n\n\n\n\n\nMar 6, 2024\n\n\nstack\n\n\n\n\n\n\n\n\n\n\n\n\nmatplotlib demo\n\n\n\n\n\n\nmatplot\n\n\n\n\n\n\n\n\n\nMar 5, 2024\n\n\n叶叶叶\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "posts/将quarto部署到云服务器/test.html",
    "href": "posts/将quarto部署到云服务器/test.html",
    "title": "Mac使用pyenv控制python版本",
    "section": "",
    "text": "pyenv常用指令\n使用方式: pyenv &lt;命令&gt; [&lt;参数&gt;]\n\n命令:\n  commands    查看所有命令\n  local       设置或显示本地的Python版本\n  global      设置或显示全局Python版本\n  shell       设置或显示shell指定的Python版本\n  install     安装指定Python版本\n  uninstall   卸载指定Python版本)\n  version     显示当前的Python版本及其本地路径\n  versions    查看所有已经安装的版本\n  which       显示安装路径\n复制代码"
  },
  {
    "objectID": "posts/网站建设/index.html",
    "href": "posts/网站建设/index.html",
    "title": "django网站部署到服务器",
    "section": "",
    "text": "如果是腾讯云/阿里云服务器需配置网络安全组\nHTTP 显示为 80/80。 实例作为网站或 Web 应用的服务器。\n\n第一步　安装nginx,fabric,virtualenv\n\n    sudo apt-get install nginx\n    sudo service nginx start\n    sudo pip install fabric3==1.14.post1   ##py2只能用低版本Fabric\n    sudo pip install virtualenv\n    此时输入网站域名或者IP就能看到welcome to nginx!测试页面\n\n第二步　运行自动部署文件fabfile.py\n\n    在包含fabfile.py文件的目录下，运行\n\n    fab deploy\n    \n    输入域名和linux密码\n\n第三步　使用sed配置Nginx和Gunicorn\n\n    #在deploy_tools文件夹下保存了默认配置,只需稍作修改将内容复制到系统相应目录下即可\n\n    sed \"s/SITENAME/yemaobumei.cn/g\" deploy_tools/nginx.template.conf | sed \"s/USER/ubuntu/g\" | sudo tee /etc/nginx/sites-available/yemaobumei.cn\n    \n    #fabric中进行文本替换的函数叫sed,先把SITENAME替换成网站地址，再把USER替换成当前系统用户名，然后使用管道操作(|)把文本留传给拥有root权限用户写入系统/etc/nginx/sites-available/yemaobumei.cn文件里。\n    \n    #激活这个配置文件的虚拟主机:\n    \n    sudo ln -s /etc/nginx/sites-available/yemaobumei.cn       /etc/nginx/sites-enabled/yemaobumei.cn\n    \n    #然后编写Upstart脚本:\n    \n    sed \"s/SITENAME/yemaobumei.cn/g\" deploy_tools/gunicorn-upstart.template.conf | sed \"s/USER/ubuntu/g\" | sudo tee /etc/init/gunicorn-yemaobumei.cn.conf\n    \n    #最后启动这两个服务:\n    \n    sudo service nginx reload\n    sudo start gunicorn-yemaobumei.cn\n\n第四步 为了能获取访问者的ip，特地在nginx.template.conf 加入了以下一段\n\n    location / {\n            proxy_set_header Host $host;\n            proxy_pass http://unix:/tmp/yemaobumei.cn.socket;\n            \n            #IP_adress\n            proxy_redirect off;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Scheme $scheme;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n        }\n\n第五步 为了将quarto静态服务纳入进来，最后/etc/nginx/sites-enabled/default 添加如下\n\nserver {\n    listen 80;\n    server_name ephys.cn;\n\n    location /static {\n        alias /home/ubuntu/sites/ephys.cn/source/static;\n    }\n    location /media {\n        autoindex on;\n        alias /home/ubuntu/sites/ephys.cn/source/media;\n    }\n\n    location /teach {\n#            root  /home/ubuntu/ephysics/_site/;\n            alias /home/ubuntu/ephysics/_site/;\n\n}\n    location / {\n            proxy_set_header Host $host;\n            proxy_pass http://unix:/tmp/ephys.cn.socket;\n\n            proxy_redirect off;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Scheme $scheme;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n        }\n}\n\n同时注意在ubuntu16.04中upstart无法使用，改成了systemd service\n因此在第三步有关upstart部分改为:\n    sed \"s/SITENAME/yemaobumei.cn/g\" deploy_tools/sysd.service \n    | sed \"s/USER/ubuntu/g\" | sudo tee  /etc/systemd/system/yemaobumei.cn.service\n\n最后 最后启动服务\n\n    sudo service nginx reload\n    sudo systemctl daemon-reload\n    sudo systemctl enable yemaobumei.cn.service\n    sudo systemctl start yemaobumei.cn.service\n\n\n注意事项\n\npip安装requests要&lt;2.27\npip install requests==2.23.0   'certifi&lt;=2020.4.5.1'\n要加上 ‘certifi&lt;=2020.4.5.1’ \n安装 requests&gt;2.27 会出现语法问题，与py2.7不兼容。 是时候改成Python3了\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "posts/竖直圆轨道/index.html",
    "href": "posts/竖直圆轨道/index.html",
    "title": "竖直圆轨道",
    "section": "",
    "text": "模拟小球在圆轨道运动 \n\n\n\n\nCode\nimport math\nfrom scipy.integrate import odeint\nfrom sympy.abc import t\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib import animation\n\nglobal g,r,tmax\ng=9.8\nr=0.3\ntmax=10\n#定义一个方程组（微分方程组）\ndef pfun(y,x):\n    y1,y2=y; #让'y'成为一个[y1',y2']的向量 所以将等式左边都化为1阶微分是很重要的\n    return np.array([y2,-g/r*math.cos(y1)]) #返回的是等式右边的值\n\n\nglobal x,y,point_ani,text_pt,v0\n\nv0 = 1*math.sqrt(3*g/r)\nx=np.arange(0,tmax,0.02) #创建自变量序列\nsoli=odeint(pfun,[0.0,v0],x) #求数值解\nplt.rc('font',size=16); plt.rc('font',family='SimHei')\nplt.rc('axes', unicode_minus=False)\n\ndef update_points_v3(num):\n    point_ani.set_data([x[num]], [y[num]]) ## point_ani.set_data(x[num], y[num]) 这种写法一直warning，需要传入列表等可迭代对象\n    # point_ani.set_data(x[:num], y[:num])##显示轨迹\n    point_ani.set_markersize(10)\n    text_pt.set_position((x[num], y[num]))\n    text_pt.set_text(\"x=%.2f, y=%.2f\" % (x[num], y[num]))\n    return point_ani, text_pt,\ndef toX(theta):\n  return r*math.cos(theta)\ndef toY(theta):\n  return r*math.sin(theta)\nfig = plt.figure()\ny=soli[:,0] #是角度 \nx=list(map(toX,y))\ny=list(map(toY,y))\n# plt.plot(x,y)#数值解\nthetas = np.arange(0,2*math.pi,0.01)\nplt.plot(r*np.cos(thetas),r*np.sin(thetas),'g',label=\"符号解曲线\")\nplt.axis(\"equal\")##横轴纵轴等比例，防止出现不圆\npoint_ani, = plt.plot(x[0], y[0], \"ro\")\nplt.grid(ls=\"--\")\ntext_pt = plt.text(4, 0.8, '', fontsize=16)\nani = animation.FuncAnimation(fig, update_points_v3, np.arange(0, 200), interval=200, blit=True)\nani.save('cos_test3.gif', writer='pillow', fps=10)##imagemagick 不能用了\n\nplt.legend()\n# plt.show()\nplt.close()\n\n\n\nFigure 1\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "posts/python数值求解微分方程/index.html",
    "href": "posts/python数值求解微分方程/index.html",
    "title": "python数值求解微分方程",
    "section": "",
    "text": "模拟小球在圆轨道运动\n\n\nCode\nfrom scipy.integrate import odeint\nfrom sympy.abc import t\nimport numpy as np\nimport matplotlib.pyplot as plt\n#定义一个方程组（微分方程组）\ndef pfun(y,x):\n    y1,y2=y; #让'y'成为一个[y1',y2']的向量 所以将等式左边都化为1阶微分是很重要的\n    return np.array([y2,-2*y1-2*y2]) #返回的是等式右边的值\nx=np.arange(0,10,0.1) #创建自变量序列\nsoli=odeint(pfun,[0.0,1.0],x) #求数值解\nplt.rc('font',size=16); plt.rc('font',family='SimHei')\nplt.plot(x,soli[:,0],'r*',label=\"数值解\")\nplt.plot(x,np.exp(-x)*np.sin(x),'g',label=\"符号解曲线\")\nplt.legend()\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1: 解的数值模拟图\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "posts/网站建设/校园网22端口被封ssh无法连接服务器.html",
    "href": "posts/网站建设/校园网22端口被封ssh无法连接服务器.html",
    "title": "校园网22端口被封ssh无法连接服务器",
    "section": "",
    "text": "校园网由于安全问题22端口被封。禁止与22端口连接。我们知道一般服务器ssh都是通过22端口连接，\n因此造成很大麻烦。如何解决。\n由于我使用了clash代理了，正好开放Lan功能。通过clash 代理连接服务器\n\n需要设置 ~/.ssh/config ，添加如下\n\nHost HK\n     User ubuntu\n     Hostname 103.0.0.0\n     Port 22\n     TCPKeepAlive yes\n     ProxyCommand connect -S 127.0.0.1:7890 -a none %h %p\n说明各个参数：\nHost 主机别名任意取，Hostname 主机ip，User 登录用户名，\nProxyCommand connect -S 127.0.0.1:7890 -a none %h %p\n通过这句设置连接时使用clash提供的本地代理 127.0.0.1:7890\n也可使用下面，看你是什么系统，win用connect，linux用nc\nProxyCommand nc -v -x 127.0.0.1:7890 %h %p\n\ngit bash里输入#测试一下\n\nssh HK  \n\n简单一点，如果你装了xshell，可以直接设置代理服务器 \n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "posts/将quarto部署到云服务器/pyenv.html",
    "href": "posts/将quarto部署到云服务器/pyenv.html",
    "title": "Mac使用pyenv控制python版本",
    "section": "",
    "text": "pyenv常用指令\n使用方式: pyenv &lt;命令&gt; [&lt;参数&gt;]\n\n命令:\n  commands    查看所有命令\n  local       设置或显示本地的Python版本\n  global      设置或显示全局Python版本\n  shell       设置或显示shell指定的Python版本\n  install     安装指定Python版本\n  uninstall   卸载指定Python版本)\n  version     显示当前的Python版本及其本地路径\n  versions    查看所有已经安装的版本\n  which       显示安装路径\n复制代码\n\n\n\n Back to top"
  },
  {
    "objectID": "posts/网站建设/docker部署django网站.html",
    "href": "posts/网站建设/docker部署django网站.html",
    "title": "docker部署django网站",
    "section": "",
    "text": "##启动gunicorn\n../virtualenv/bin/gunicorn -b 0.0.0.0:8001 -w 5 mysite.wsgi:application\n\ndjang中settiong.py，\nDEBUG=True和False有区别,会影响静态文件找寻\n为避免nginx和gunicorn同时占用端口，在nginx配置中转发请求到socket文件， gunicorn再监听该socket文件即可\n\n###/etc/nginx/site-enable/default\nserver {\n    listen 80;\n    server_name SITENAME;\n\n    location /static {\n        alias /home/USER/sites/SITENAME/source/static;\n    }\n    location /media {\n        autoindex on;\n        alias /home/USER/sites/SITENAME/source/media;\n    }\n    location / {\n            proxy_set_header Host $host;\n            proxy_pass http://unix:/tmp/SITENAME.socket;\n\n            proxy_redirect off;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Scheme $scheme;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n        }\n\n}\n#后台启动gunicorn\nnohup ../virtualenv/bin/gunicorn -b unix:/tmp/ephys.cn.socket -w 5 mysite.wsgi:application &gt; /dev/null 2&gt;&1 &"
  },
  {
    "objectID": "posts/网站建设/1.html",
    "href": "posts/网站建设/1.html",
    "title": "django网站部署到服务器",
    "section": "",
    "text": "如果是腾讯云/阿里云服务器需配置网络安全组\nHTTP 显示为 80/80。 实例作为网站或 Web 应用的服务器。\n\n第一步　安装nginx,fabric,virtualenv\n\n    sudo apt-get install nginx\n    sudo service nginx start\n    sudo pip install fabric3==1.14.post1   ##py2只能用低版本Fabric\n    sudo pip install virtualenv\n    此时输入网站域名或者IP就能看到welcome to nginx!测试页面\n\n第二步　运行自动部署文件fabfile.py\n\n    在包含fabfile.py文件的目录下，运行\n\n    fab deploy\n    \n    输入域名和linux密码\n\n第三步　使用sed配置Nginx和Gunicorn\n\n    #在deploy_tools文件夹下保存了默认配置,只需稍作修改将内容复制到系统相应目录下即可\n\n    sed \"s/SITENAME/yemaobumei.cn/g\" deploy_tools/nginx.template.conf | sed \"s/USER/ubuntu/g\" | sudo tee /etc/nginx/sites-available/yemaobumei.cn\n    \n    #fabric中进行文本替换的函数叫sed,先把SITENAME替换成网站地址，再把USER替换成当前系统用户名，然后使用管道操作(|)把文本留传给拥有root权限用户写入系统/etc/nginx/sites-available/yemaobumei.cn文件里。\n    \n    #激活这个配置文件的虚拟主机:\n    \n    sudo ln -s /etc/nginx/sites-available/yemaobumei.cn       /etc/nginx/sites-enabled/yemaobumei.cn\n    \n    #然后编写Upstart脚本:\n    \n    sed \"s/SITENAME/yemaobumei.cn/g\" deploy_tools/gunicorn-upstart.template.conf | sed \"s/USER/ubuntu/g\" | sudo tee /etc/init/gunicorn-yemaobumei.cn.conf\n    \n    #最后启动这两个服务:\n    \n    sudo service nginx reload\n    sudo start gunicorn-yemaobumei.cn\n\n第四步 为了能获取访问者的ip，特地在nginx.template.conf 加入了以下一段\n\n    location / {\n            proxy_set_header Host $host;\n            proxy_pass http://unix:/tmp/yemaobumei.cn.socket;\n            \n            #IP_adress\n            proxy_redirect off;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Scheme $scheme;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n        }\n\n第五步 为了将quarto静态服务纳入进来，最后/etc/nginx/sites-enabled/default 添加如下\n\nserver {\n    listen 80;\n    server_name ephys.cn;\n\n    location /static {\n        alias /home/ubuntu/sites/ephys.cn/source/static;\n    }\n    location /media {\n        autoindex on;\n        alias /home/ubuntu/sites/ephys.cn/source/media;\n    }\n\n    location /teach {\n#            root  /home/ubuntu/ephysics/_site/;\n            alias /home/ubuntu/ephysics/_site/;\n\n}\n    location / {\n            proxy_set_header Host $host;\n            proxy_pass http://unix:/tmp/ephys.cn.socket;\n\n            proxy_redirect off;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Scheme $scheme;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n        }\n}\n\n同时注意在ubuntu16.04中upstart无法使用，改成了systemd service\n因此在第三步有关upstart部分改为:\n    sed \"s/SITENAME/yemaobumei.cn/g\" deploy_tools/sysd.service \n    | sed \"s/USER/ubuntu/g\" | sudo tee  /etc/systemd/system/yemaobumei.cn.service\n\n最后 最后启动服务\n\n    sudo service nginx reload\n    sudo systemctl daemon-reload\n    sudo systemctl enable yemaobumei.cn.service\n    sudo systemctl start yemaobumei.cn.service\n\n\n注意事项\n\npip安装requests要&lt;2.27\npip install requests==2.23.0   'certifi&lt;=2020.4.5.1'\n要加上 ‘certifi&lt;=2020.4.5.1’ \n安装 requests&gt;2.27 会出现语法问题，与py2.7不兼容。 是时候改成Python3了\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "posts/网站建设/docker部署django网站.html#第一步建立镜像",
    "href": "posts/网站建设/docker部署django网站.html#第一步建立镜像",
    "title": "docker部署django网站",
    "section": "第一步，建立镜像",
    "text": "第一步，建立镜像\nDOCKERFILE我放在阿里云codeup托管\ndocker build -t yemaobumei:webapp  ."
  },
  {
    "objectID": "posts/网站建设/docker部署django网站.html#第二步创建容器",
    "href": "posts/网站建设/docker部署django网站.html#第二步创建容器",
    "title": "docker部署django网站",
    "section": "第二步，创建容器",
    "text": "第二步，创建容器\ndocker run -it --name test -v /home/ubuntu/sites/ephys.cn/source:/root/app/source  -p 8111:80  yemaobumei:webapp /bin/bash"
  },
  {
    "objectID": "posts/网站建设/docker部署django网站.html#第三步配置web环境主要是nginx",
    "href": "posts/网站建设/docker部署django网站.html#第三步配置web环境主要是nginx",
    "title": "docker部署django网站",
    "section": "第三步，配置web环境，主要是nginx",
    "text": "第三步，配置web环境，主要是nginx\nsh fab.sh"
  },
  {
    "objectID": "posts/网站建设/docker部署django网站.html#最后启动gunicorn监听端口",
    "href": "posts/网站建设/docker部署django网站.html#最后启动gunicorn监听端口",
    "title": "docker部署django网站",
    "section": "最后，启动gunicorn监听端口",
    "text": "最后，启动gunicorn监听端口\nnohup ../virtualenv/bin/gunicorn -b unix:/tmp/ephys.cn.socket -w 5 mysite.wsgi:application &gt; /dev/null 2&gt;&1 &"
  },
  {
    "objectID": "posts/网站建设/docker部署django网站（二）.html",
    "href": "posts/网站建设/docker部署django网站（二）.html",
    "title": "docker部署django网站（二）",
    "section": "",
    "text": "项目我放在阿里云codeup托管\ndocker build -t yemaobumei:webapp  .\n\nDockerfile具体内容：\n\n# 说明该镜像以哪个镜像为基础\nFROM ubuntu:22.04\n\n# 构建者的基本信息\nMAINTAINER yemaobumei\n\n# 拷贝本地文件到镜像中\nRUN mkdir -p /root/app\nCOPY ./* /root/app/\n\n# 更换pip源\nRUN mkdir -p /root/.pip\nCOPY ./pip.conf  /root/.pip\n\n# 在build这个镜像时执行的操作\n\nRUN cp /root/app/sources.list /etc/apt/\n\nRUN apt update\nRUN apt install -y ca-certificates\n\nRUN apt install -y python2\nRUN apt install -y nginx curl wget vim git  python2-dev  build-essential\n\nRUN service nginx start\n\nRUN  cd /root/app/ && python2.7 get-pip.py \nRUN pip install virtualenv \n\n\n\n-v 将本地源代码关联到容器内，不直接放入容器，避免泄露信息。\n-p 本地端口8111关联到容器80端口\ndocker run -it --name test -v /home/ubuntu/sites/ephys.cn/source:/root/app/source  -p 8111:80  yemaobumei:webapp /bin/bash\n\n\n\nsh fab.sh\n\nfab.sh具体内容\n\n#!/bin/bash\nuser=\"root\"\nroot_path='/root' \nbase_dir='/root/app/'\nsource_folder=\"/root/app/source\"\nvirtualenv_folder='/root/app/virtualenv'\nsite_name=\"ephys.cn\" \n##创建需要的目录  \nlist=\"database static virtualenv source\"  \nfor folder in $list;  \ndo\n    if [ ! -d $folder ]; then\n      mkdir -p $folder\n    else\n        echo \"$folder existed\"\n    fi  \ndone\n\ncd $base_dir && cp db.sqlite3 \"${base_dir}/database\"\n\n##直接修改源文件需要加 -i\nsed  -i 's/DEBUG = True/DEBUG = False/'   \"${source_folder}/mysite/settings.py\"\n\nsed -i \"s/ALLOWED_HOSTS =.*$/ALLOWED_HOSTS = ['${site_name}','127.0.0.1',]/\"  \"${source_folder}/mysite/settings.py\"\n\nvirtualenv  virtualenv\n\ncd $source_folder && ../virtualenv/bin/pip install -r \"requirements.txt\"\n\ncd $source_folder && ../virtualenv/bin/python manage.py collectstatic --noinput\n\ncd $source_folder && ../virtualenv/bin/python manage.py makemigrations --noinput\n\n#mkdir -p \"${root_path}/sites/${site_name}\"\n\ncd $base_dir\n\n#sed \"s/SITENAME/${site_name}/g\" nginx.template.conf | sed \"s/USER/${user}/g\" | tee \"/etc/nginx/sites-available/${site_name}\"\nsed \"s/SITENAME/${site_name}/g\" nginx.template.conf | tee \"/etc/nginx/sites-available/${site_name}\"\n\nln -s \"/etc/nginx/sites-available/${site_name}\"       \"/etc/nginx/sites-enabled/${site_name}\"\n\nservice nginx reload\n\n#nginx静态资源403，原因修改/etc/nginx/nginx.conf \n#user=www-data   user=root\n\nnginx.template.conf配置\n\nserver {\n    listen 80;\n    server_name SITENAME;\n\n    location /static {\n        alias /root/app/source/static;\n    }\n    location /media {\n        autoindex on;\n        alias /root/app/source/media;\n    }\n\n\n    location / {\n            proxy_set_header Host $host;\n            proxy_pass http://unix:/tmp/SITENAME.socket;\n\n            proxy_redirect off;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Scheme $scheme;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n        }\n}\n\n\n\nnohup ../virtualenv/bin/gunicorn -b unix:/tmp/ephys.cn.socket -w 5 mysite.wsgi:application &gt; /dev/null 2&gt;&1 &"
  },
  {
    "objectID": "posts/网站建设/docker部署django网站（二）.html#第一步建立镜像",
    "href": "posts/网站建设/docker部署django网站（二）.html#第一步建立镜像",
    "title": "docker部署django网站（二）",
    "section": "",
    "text": "项目我放在阿里云codeup托管\ndocker build -t yemaobumei:webapp  .\n\nDockerfile具体内容：\n\n# 说明该镜像以哪个镜像为基础\nFROM ubuntu:22.04\n\n# 构建者的基本信息\nMAINTAINER yemaobumei\n\n# 拷贝本地文件到镜像中\nRUN mkdir -p /root/app\nCOPY ./* /root/app/\n\n# 更换pip源\nRUN mkdir -p /root/.pip\nCOPY ./pip.conf  /root/.pip\n\n# 在build这个镜像时执行的操作\n\nRUN cp /root/app/sources.list /etc/apt/\n\nRUN apt update\nRUN apt install -y ca-certificates\n\nRUN apt install -y python2\nRUN apt install -y nginx curl wget vim git  python2-dev  build-essential\n\nRUN service nginx start\n\nRUN  cd /root/app/ && python2.7 get-pip.py \nRUN pip install virtualenv"
  },
  {
    "objectID": "posts/网站建设/docker部署django网站（二）.html#第二步创建容器",
    "href": "posts/网站建设/docker部署django网站（二）.html#第二步创建容器",
    "title": "docker部署django网站（二）",
    "section": "",
    "text": "-v 将本地源代码关联到容器内，不直接放入容器，避免泄露信息。\n-p 本地端口8111关联到容器80端口\ndocker run -it --name test -v /home/ubuntu/sites/ephys.cn/source:/root/app/source  -p 8111:80  yemaobumei:webapp /bin/bash"
  },
  {
    "objectID": "posts/网站建设/docker部署django网站（二）.html#第三步配置web环境主要是nginx",
    "href": "posts/网站建设/docker部署django网站（二）.html#第三步配置web环境主要是nginx",
    "title": "docker部署django网站（二）",
    "section": "",
    "text": "sh fab.sh\n\nfab.sh具体内容\n\n#!/bin/bash\nuser=\"root\"\nroot_path='/root' \nbase_dir='/root/app/'\nsource_folder=\"/root/app/source\"\nvirtualenv_folder='/root/app/virtualenv'\nsite_name=\"ephys.cn\" \n##创建需要的目录  \nlist=\"database static virtualenv source\"  \nfor folder in $list;  \ndo\n    if [ ! -d $folder ]; then\n      mkdir -p $folder\n    else\n        echo \"$folder existed\"\n    fi  \ndone\n\ncd $base_dir && cp db.sqlite3 \"${base_dir}/database\"\n\n##直接修改源文件需要加 -i\nsed  -i 's/DEBUG = True/DEBUG = False/'   \"${source_folder}/mysite/settings.py\"\n\nsed -i \"s/ALLOWED_HOSTS =.*$/ALLOWED_HOSTS = ['${site_name}','127.0.0.1',]/\"  \"${source_folder}/mysite/settings.py\"\n\nvirtualenv  virtualenv\n\ncd $source_folder && ../virtualenv/bin/pip install -r \"requirements.txt\"\n\ncd $source_folder && ../virtualenv/bin/python manage.py collectstatic --noinput\n\ncd $source_folder && ../virtualenv/bin/python manage.py makemigrations --noinput\n\n#mkdir -p \"${root_path}/sites/${site_name}\"\n\ncd $base_dir\n\n#sed \"s/SITENAME/${site_name}/g\" nginx.template.conf | sed \"s/USER/${user}/g\" | tee \"/etc/nginx/sites-available/${site_name}\"\nsed \"s/SITENAME/${site_name}/g\" nginx.template.conf | tee \"/etc/nginx/sites-available/${site_name}\"\n\nln -s \"/etc/nginx/sites-available/${site_name}\"       \"/etc/nginx/sites-enabled/${site_name}\"\n\nservice nginx reload\n\n#nginx静态资源403，原因修改/etc/nginx/nginx.conf \n#user=www-data   user=root\n\nnginx.template.conf配置\n\nserver {\n    listen 80;\n    server_name SITENAME;\n\n    location /static {\n        alias /root/app/source/static;\n    }\n    location /media {\n        autoindex on;\n        alias /root/app/source/media;\n    }\n\n\n    location / {\n            proxy_set_header Host $host;\n            proxy_pass http://unix:/tmp/SITENAME.socket;\n\n            proxy_redirect off;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Scheme $scheme;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n        }\n}"
  },
  {
    "objectID": "posts/网站建设/docker部署django网站（二）.html#最后启动gunicorn监听端口",
    "href": "posts/网站建设/docker部署django网站（二）.html#最后启动gunicorn监听端口",
    "title": "docker部署django网站（二）",
    "section": "",
    "text": "nohup ../virtualenv/bin/gunicorn -b unix:/tmp/ephys.cn.socket -w 5 mysite.wsgi:application &gt; /dev/null 2&gt;&1 &"
  },
  {
    "objectID": "posts/网站建设/docker部署django网站（二）.html#文件结构",
    "href": "posts/网站建设/docker部署django网站（二）.html#文件结构",
    "title": "docker部署django网站（二）",
    "section": "",
    "text": "4.png"
  },
  {
    "objectID": "posts/网站建设/docker部署django网站(一）.html",
    "href": "posts/网站建设/docker部署django网站(一）.html",
    "title": "docker部署django网站（一）",
    "section": "",
    "text": "记录docker部署django环境遇到的一些问题\n##启动gunicorn\n../virtualenv/bin/gunicorn -b 0.0.0.0:8001 -w 5 mysite.wsgi:application\n\ndjang中settiong.py，\nDEBUG=True和False有区别,会影响静态文件找寻\n为避免nginx和gunicorn同时占用端口，在nginx配置中转发请求到socket文件， gunicorn再监听该socket文件即可\n\n##nginx配置中需要将请求转移到 ephys.cn.socket\ngunicorn -b unix:/tmp/ephys.cn.socket -w 5 mysite.wsgi:application\n###/etc/nginx/site-enable/default\nserver {\n    listen 80;\n    server_name SITENAME;\n\n    location /static {\n        alias /home/USER/sites/SITENAME/source/static;\n    }\n    location /media {\n        autoindex on;\n        alias /home/USER/sites/SITENAME/source/media;\n    }\n    location / {\n            proxy_set_header Host $host;\n            proxy_pass http://unix:/tmp/SITENAME.socket;\n\n            proxy_redirect off;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Scheme $scheme;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n        }\n\n}\n#后台启动gunicorn\nnohup ../virtualenv/bin/gunicorn -b unix:/tmp/ephys.cn.socket -w 5 mysite.wsgi:application &gt; /dev/null 2&gt;&1 &\n\n\n\n\n Back to top"
  },
  {
    "objectID": "posts/生活中的物理/游泳如何前进.html",
    "href": "posts/生活中的物理/游泳如何前进.html",
    "title": "游泳是怎么前进的？",
    "section": "",
    "text": "游泳时，水对手的椎力是做负功的，水对人头和躯体的阻力或拽力也是做负功的，人所受外力都对他做负功，他怎么还能匀速甚至加速前进呢？试用能量转换分析此问题。\n\n分析：游泳时，人手从前向后划水使得身体不断地向前运动。我们只考虑手的划动在游泳中的作用，且设手从前向后相对身体划动一次的距离为 \\Delta s_{1},在此时间内身体在泳道中前 进了\\Delta s_2的距离，那么同一时间手在水中(相对水)由前向后划动了 达\\Delta l=\\Delta s_1-\\Delta s_2的距离， 如图 1.33 所示。由于手是相对水向后划动，水给手的反作用推力是向前的，它和手的位移 方向相反，所以此推力对手做负功。\n\n\n\n图 1.33\n\n\n​ 从力的角度分析。对于人体质点系，沿前进方向受到的外力一是水对手向前的推力F，一是向后的水对人头和躯体的阻力或拽力f_{i} 。由质心运动定理，作用在质点系上各外力的合力等于质点系质量M和质心加速度a_c的乘积，有 \n\\sum\\left(F-f_r\\right)=M\\frac{\\mathrm{d}v_{\\mathrm{C}}}{\\mathrm{d}t}=Ma_{\\mathrm{C}}\n 当F-f_c=0,a_c=0,在此划动过程中人体质心匀速前进；当F-f_r &gt; 0 时，a_C &gt; 0,人体质心就会得到加速。\n​ 从能量转换(功能关系)角度分析。根据质心动能定理，作用在质点系上各外力的合力对质心位移的功等于质心动能的增量。可认为竖直方向人体所受的外力(重力、浮力等)不做功，沿游泳前进方向大体质点系受到的外力为上述的F和f_r。在手从前向后的划动过程中，虽然手的位移方向向后，但人体的质心位移 \\mathrm{d}r_c方向却是向前的，故向前的推力F对人体质心做正功。考虑到向后的阻力f_r对人体质心做负功，有 \ndA=\\left(F+f_r\\right)\\cdot dr_{C}=Fdr_{C}-f_rdr_{C}=d\\left(\\frac{1}{2}Mv_{C}^{2}\\right)\n 当Fdr_c- f_rdr_c= 0时，人体质心匀速前进；当 Fdr_c- f_r dr_c&gt; 0 时，人体质心动能在过程中将得到增加。做正功的水是被向后划的手挤压的水，在被挤压过程中手对它做正功，它从中得到了对人体质心做正功的能量(内能)。手做正功的能量则是来源于手臂肌肉的“生物能”” (化学能),此能量转化过程是人体内非保守内力的做功过程，是把通过手臂肌肉收缩所消耗的生物能转化成手臂划动动能的过程。总之，游泳时人体匀速或加速前进所需能量是来源于人体肌肉的生物能，手臂向后划水的过程是一个把人体生物能转化为其他形式能的过程。\n\n\n\n Back to top"
  },
  {
    "objectID": "posts/教学设计/1.html",
    "href": "posts/教学设计/1.html",
    "title": "解决匀变速直线问题的一般方法",
    "section": "",
    "text": "解决匀变速直线问题的一般方法\n\n1.一辆汽车在笔直的公路上做匀变速直线运动，该公路安置三个路标A、B、C。A、B 间距s_{1}=6m, B、C间距s_{2}=24m。汽车通过A、B两相邻路标用了t_{1}=2s, 通过B、C两相邻路标用了t_{2}=4s。求：\n\n(1)汽车通过A、C路标间距的平均速度大小；\n(2)汽车的加速度大小及汽车通过A、B、C各路标时的速度大小。\n ① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩\n解法一:基本式\nA\\rightarrow B:s_1=v_At_1+\\frac{1}{2}at_1^2  \\quad\nA\\rightarrow C:s_1+s_2=v_A(t_1+t_2)+\\frac{1}{2}a(t_1+t_2)^2\\quad\n联立①②方程组，解得:v_A=2m/s,a=1m/s^2\nv_B=v_A+at_1=4m/s,v_c=v_A+a(t_1+t_2)=8m/s\n解法二:平均速度=中间时刻速度\nv_{1s末}=\\bar{v}_{AB}=3m/s\nv_{4s末}=\\bar{v}_{BC}=6m/s\na=\\frac{\\Delta v}{\\Delta t}=1m/s^2\nv_A=v_{1s末}-a\\frac{t_1}{2}=2m/s\n解法三:位移差公式\nBC段分为等时的两段BP,PC，则由位移差公式可得  x_{BP}-s_1=x_{PC}-x_{BP} x_{BP}+x_{PC}=s_2\n解得x_{BP}=10m,x_{PC}=14m \\Delta x=x_{BP}-x_{AB}=at_1^2\n解得 a=1m/s^2\n\n\n\n\n Back to top"
  },
  {
    "objectID": "posts/教学设计/2.6匀变速直线运动规律的思维方法及其综合运用.html",
    "href": "posts/教学设计/2.6匀变速直线运动规律的思维方法及其综合运用.html",
    "title": "解决匀变速直线问题的一般方法",
    "section": "",
    "text": "解决匀变速直线问题的一般方法\n\n一辆汽车在笔直的公路上做匀变速直线运动，该公路安置三个路标A、B、C。A、B 间距s_{1}=6m, B、C间距s_{2}=24m。汽车通过A、B两相邻路标用了t_{1}=2s, 通过B、C两相邻路标用了t_{2}=4s。求：\n\n(1)汽车通过A、C路标间距的平均速度大小；\n(2)汽车的加速度大小及汽车通过A、B、C各路标时的速度大小。\n ① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩\n解法一:基本式\nA\\rightarrow B:s_1=v_At_1+\\frac{1}{2}at_1^2  \\quad\nA\\rightarrow C:s_1+s_2=v_A(t_1+t_2)+\\frac{1}{2}a(t_1+t_2)^2\\quad\n联立①②方程组，解得:v_A=2m/s,a=1m/s^2\nv_B=v_A+at_1=4m/s,v_c=v_A+a(t_1+t_2)=8m/s\n解法二:平均速度=中间时刻速度\nv_{1s末}=\\bar{v}_{AB}=3m/s\nv_{4s末}=\\bar{v}_{BC}=6m/s\na=\\frac{\\Delta v}{\\Delta t}=1m/s^2\nv_A=v_{1s末}-a\\frac{t_1}{2}=2m/s\n解法三:位移差公式\nBC段分为等时的两段BP,PC，则由位移差公式可得 \nx_{BP}-s_1=x_{PC}-x_{BP}\nx_{BP}+x_{PC}=s_2\n解得x_{BP}=10m,x_{PC}=14m \\Delta x=x_{BP}-x_{AB}=at_1^2\n解得 a=1m/s^2\n3.如图，一质点从 A点开始做初速度为零 的匀加速直线运动，加速度大小为 a ， B 、 C 、 D 是质点运动路径上的三个点， 且 BC=x_1 ， CD=x_2 ，质点通过BC 段所用时间是通过CD 段所用时间的一半， 则质点经过C 点时的速度大小和 A 、 B 间的距离为( )\n\nA.质点经过 C 点时的速度大小为 \\frac{x_1+4x_2}6\\sqrt{\\frac{3a}{x_2-2x_1}}\nB.质点经过 C 点时的速度大小为\\frac{4x_1+x_2}6\\sqrt{\\frac{3a}{x_2-2x_1}}\nC. A 、 B 间的距离为 \\frac{(8x_{1}-x_{2})^{2}}{24(x_{2}-2x_{1})}\nD. A 、 B 间的距离为 \\frac{(8x_{1}-x_{2})^{2}}{12(x_{2}-2x_{1})}\n解：设BC段时间为t，则CD段时间为2t。\nB-C:v_Bt_0+\\frac{1}{2}at_0^2=x_1 \\quad(1)\nB-D:v_B\\cdot 3t_0+\\frac{1}{2}a(3t_0)^2=x_1+x_2\\quad(2)\n(2)-3*(1)\\rightarrow at_0^2=\\frac{x_2-2x_1}{3}\\quad(3)\n9*(1)-(2)\\rightarrow v_Bt=\\frac{8x_1-x_2}{6}\\quad(4)\nt_0=\\sqrt{\\frac{x_2-2x_1}{3a}},\\quad v_B=\\frac{8x_1-x_2}{6t_0}=\\frac{8x_1-x_2}{6}\\sqrt{\\frac{3a}{x_2-2x_1}}\nx_{AB}=\\frac{v_B^2}{2a}=\n\n\n\n逆向思维\n\n疫情期间，武汉小汤山医院7天内建成，见证了中国速度。在建筑工地上一卡车以速度10m/s匀速行驶，刹车后第1个2s内的位移与最后一个2s内的位移之比为3∶2，设卡车做匀减速直线运动，则刹车后4s内卡车通过的距离是（　　）\n\nA.2.5m B.4m C.12.5m D.25m\n解：\n第一个2s内位移3s=v_0*2-\\frac{1}{2}a\\cdot2^2\n最后一个2s内位移，逆向思维，看成初速度为0的反向加速运动： 2s=\\frac{1}{2}a\\cdot2^2\n解得 s=4m,a=4m/s^2\nv_0=10m/s,t=2.5s停下，因此4s内位移：x=\\frac{v_0^2}{2a}=12.5m\n注意逆向思维：匀减速至0的运动可以看成反向的初速度为0的匀加速运动解决问题\n\n\n\n\n Back to top"
  }
]
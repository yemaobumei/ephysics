[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "笔耕不辍"
  },
  {
    "objectID": "posts/matplot_animate/index.html",
    "href": "posts/matplot_animate/index.html",
    "title": "matplotlib 动画",
    "section": "",
    "text": "matplot animation的一个例子\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib import animation\ndef update_points_v3(num):\n    point_ani.set_data(x[num], y[num])\n    if num % 5 == 0:\n        point_ani.set_marker(\"*\")\n        point_ani.set_markersize(12)\n    else:\n        point_ani.set_marker(\"o\")\n        point_ani.set_markersize(8)\n    text_pt.set_position((x[num], y[num]))\n    text_pt.set_text(\"x=%.2f, y=%.2f\" % (x[num], y[num]))\n    return point_ani, text_pt,\n\ndef test3():\n    global x,y,point_ani,text_pt\n    x = np.linspace(0, 2 * np.pi, 100)\n    y = np.cos(x)\n    fig = plt.figure()\n    plt.plot(x, y)\n    point_ani, = plt.plot(x[0], y[0], \"ro\")\n    plt.grid(ls=\"--\")\n    text_pt = plt.text(4, 0.8, '', fontsize=16)\n    ani = animation.FuncAnimation(fig, update_points_v3, np.arange(0, 100), interval=100, blit=True)\n    ani.save('cos_test3.gif', writer='imagemagick', fps=10)\n    # plt.show()\n    plt.close()\ntest3()    \n\n\n/var/folders/nl/_kfvn24j60j8_q_3kd0njl3h0000gn/T/ipykernel_27064/4217115973.py:5: MatplotlibDeprecationWarning: Setting data with a non sequence type is deprecated since 3.7 and will be remove two minor releases later\n  point_ani.set_data(x[num], y[num])\nMovieWriter imagemagick unavailable; using Pillow instead.\n/var/folders/nl/_kfvn24j60j8_q_3kd0njl3h0000gn/T/ipykernel_27064/4217115973.py:5: MatplotlibDeprecationWarning: Setting data with a non sequence type is deprecated since 3.7 and will be remove two minor releases later\n  point_ani.set_data(x[num], y[num])\n\n\n测试\n\n\n\n动画示意图"
  },
  {
    "objectID": "posts/等量异种电荷电场/index.html",
    "href": "posts/等量异种电荷电场/index.html",
    "title": "等量异种电荷电场",
    "section": "",
    "text": "For a demonstration of a line plot on a polar axis, see Figure 1.\n\n\nCode\nfrom matplotlib.tri import (Triangulation, UniformTriRefiner, CubicTriInterpolator)\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom numpy import vectorize,pi\nfrom scipy.integrate import quad\n\na=1. #圆环半径\nq=1. #带电量\neps=1e-5 #防止奇点附近值过大\nd_phi=lambda theta,x,y,z : q/np.sqrt((x-a*np.cos(theta))**2+(y-a*np.sin(theta))**2+z**2+eps)\n\n#利用vectorize装饰器一次传入一组x,y,z值作为参数进行积分\n@vectorize\ndef Quad(f_handle,x,y,z):\n    return quad(f_handle,0,2*pi,args=(x,y,z))[0]\n\nn_angles = 30 #角度划分数目\nn_radii = 20 #极径划分数目\nmin_radius = 0.1*a #最小极径\nradii = np.linspace(min_radius, 1.9*a, n_radii)\nangles = np.linspace(0, 2 * np.pi, n_angles, endpoint=False)\nangles = np.repeat(angles[..., np.newaxis], n_radii, axis=1) #...和newaxis都是索引的高级写法，具体作用参见https://numpy.org/doc/stable/reference/arrays.indexing.html\nangles[:, 1::2] += np.pi / n_angles #每隔一圈点将数据点旋转过一个最小角度，使得点之间错开从而更好看（amazing）\n\n#x,y坐标以及对应的电势\nx = np.concatenate(((radii*np.cos(angles)).flatten()+a,(radii*np.cos(angles)).flatten()-a),axis=0)\ny = np.concatenate(((radii*np.sin(angles)).flatten(),(radii*np.sin(angles)).flatten()),axis=0)\nV = Quad(d_phi,x,0,y) #这里实际上是把y坐标取为0，y作为z轴坐标传入的\n\ntriang = Triangulation(x, y) #对x,y代表的点进行三角剖分，默认进行Delaunay三角剖分\ntriang.set_mask( #掩蔽奇点，这里是圆环xoz截面处所在的两个点附近的点\n    np.logical_or(\n    np.hypot(x[triang.triangles].mean(axis=1)+a,y[triang.triangles].mean(axis=1))&lt; 0.1*a,\n    np.hypot(x[triang.triangles].mean(axis=1)-a,y[triang.triangles].mean(axis=1))&lt; 0.1*a,\n    )\n)\n\n#对三角网格进行细分、插值\nrefiner = UniformTriRefiner(triang) #针对前面定义的三角网格triang新建一个refiner\ntri_refi, z_test_refi = refiner.refine_field(V, subdiv=3) #将每个三角形细分为4**subdiv个小三角，refine data，默认使用三次插值器\ntci = CubicTriInterpolator(triang, -V) #用于对电势的负值进行插值的三次插值器\n(Ex, Ey) = tci.gradient(triang.x, triang.y) #计算电势的负梯度\nE_norm = np.sqrt(Ex**2 + Ey**2)\n\nfig, ax = plt.subplots(figsize=(10,10),facecolor='w')\nax.set_aspect('equal')\nax.use_sticky_edges = False\nax.margins(0.07)\n\n# tpc = ax.tripcolor(triang, V, shading='gouraud') #绘制Pseudocolor plots, 但是并不好看\nax.triplot(triang, color='0.8') #绘制三角网格\nlevels = np.arange(0., 20., 0.5) #绘制的等值线的值分布数组\nax.tricontour(tri_refi, z_test_refi, levels=levels, cmap='hot',\n              linewidths=[2.0, 1.0, 1.0, 1.0]) #使用前面refine过后的数据绘制等值线图\nax.quiver(triang.x, triang.y, Ex/E_norm, Ey/E_norm,\n          units='xy', scale=10., zorder=3, color='blue',\n          width=0.007, headwidth=3., headlength=4.) #绘制电场强度矢量，这里进行了normalize，所有箭头长度相同\nax.set_title('Gradient plot in the xoz plane of a wire coil')\nfig.savefig('xoz.png',dpi=120)\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1: A line plot on a polar axis"
  },
  {
    "objectID": "posts/修改quarto中katex默认js文件/index.html",
    "href": "posts/修改quarto中katex默认js文件/index.html",
    "title": "修改quarto中katex默认js文件地址",
    "section": "",
    "text": "quarto默认生成的html文件引用js,css地址是\nhttps://cdn.jsdelivr.net/npm/katex@0.15.1/dist/katex.min.js https://cdn.jsdelivr.net/npm/katex@0.15.1/dist/katex.min.css\n这两个地址国外ip，网速很慢或者访问不到，因此需要修改成更好用的链接，具体方法如下\n\n_quarto.yml 加入一段\nformat:\n  html:\n    theme: flatly\n    css: styles.css\n    html-math-method:\n      method: katex\n      url: \"https://cdn.bootcss.com/KaTeX/0.11.1/\"\nurl也可以改成本地的js和css文件"
  },
  {
    "objectID": "posts/matplot_demo/index.html",
    "href": "posts/matplot_demo/index.html",
    "title": "matplotlib demo",
    "section": "",
    "text": "For a demonstration of a line plot on a polar axis, see Figure 1.\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1: A line plot on a polar axis"
  },
  {
    "objectID": "posts/自己域名绑定githubpages/index.html",
    "href": "posts/自己域名绑定githubpages/index.html",
    "title": "如何绑定自己的域名到用户名.github.io",
    "section": "",
    "text": "根目录下创建CNAME，push上传\ntouch CNAME\n\"ephys.cn\" &gt;&gt; CNMAE\n\n\n域名解析\n主机记录 记录类型 记录值\nwww CNAME github用户名.github.io\n@ CNAME github用户名.github.io\n等待1-2分钟DNS解析生效"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts.\n欢迎大家来到我的博客👏\n实验"
  },
  {
    "objectID": "posts/welcome/index.html#python代码",
    "href": "posts/welcome/index.html#python代码",
    "title": "Welcome To My Blog",
    "section": "python代码",
    "text": "python代码\ndef f(x):\n    s = 0\n    for i in range(x):\n        s += i\n    return s\n\n  f(x) = \\frac{1}{2} \\sum_{j=1}^\\infty \\int_0^1 \\sin^2(j x) dt .\n\n \\alpha_1 \n\n解决quarto找不到本地pyhton问题\npowershell 设置永久环境变量\nsetx QUARTO_PYTHON \"D:\\Python3.11.0\\python.exe\" // 永久设置环境变量(用户)"
  },
  {
    "objectID": "posts/让圆动起来/index.html",
    "href": "posts/让圆动起来/index.html",
    "title": "让球沿轨道动起来",
    "section": "",
    "text": "matplot 让球沿着圆轨道运动\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.animation as animation\n\n##定义一些常量，比如轨道的半径，球心位置。\nx0,y0 = 0,0\nr = 10\nr_ball = 0.5\nT = 5\n\n##定义画布\nfig,ax = plt.subplots()\nax.set_xlim(-r*1.2,r*1.2)\nax.set_ylim(-r*1.2,r*1.2)\nax.set_aspect('equal') #画布成正方形\nax.axis('off') #不显示坐标轴\n\n##定义圆\ncircle = plt.Circle((x0,y0),r_ball,color='y',fill=True)\ncircle_guidao = plt.Circle((x0,y0),r,color='red',fill=False)\nax.add_artist(circle)\nax.add_artist(circle_guidao)\n\n##定义更新函数，更新每一帧圆的位置\ndef update(frame):\n    x = x0+(r-r_ball)*np.cos(2*np.pi*frame/T)\n    y = y0+(r-r_ball)*np.sin(2*np.pi*frame/T)\n    circle.set_center((x,y))\n    return circle,\n\n# 创建动画\nanim = animation.FuncAnimation(fig, update, frames=np.arange(0, 10, 0.1), interval=50,blit=True)\nanim.save('fig.gif', writer='pillow', fps=10) \n# 显示动画\n# plt.show()\nplt.close()\n\n\n\n\n\n动画"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Stack",
    "section": "",
    "text": "Welcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nOct 27, 2024\n\n\n叶叶叶\n\n\n\n\n\n\n\n\n\n\n\n\n让球沿轨道动起来\n\n\n\n\n\n\nmatplot\n\n\n\n\n\n\n\n\n\nMar 11, 2024\n\n\nstack\n\n\n\n\n\n\n\n\n\n\n\n\nmatplotlib 动画\n\n\n\n\n\n\nmatplot\n\n\n\n\n\n\n\n\n\nMar 10, 2024\n\n\n叶叶叶\n\n\n\n\n\n\n\n\n\n\n\n\n如何绑定自己的域名到用户名.github.io\n\n\n\n\n\n\nGithub\n\n\n\n\n\n\n\n\n\nMar 6, 2024\n\n\nstack\n\n\n\n\n\n\n\n\n\n\n\n\n修改quarto中katex默认js文件地址\n\n\n\n\n\n\nquarto\n\n\n\n\n\n\n\n\n\nMar 6, 2024\n\n\nstack\n\n\n\n\n\n\n\n\n\n\n\n\n等量异种电荷电场\n\n\n\n\n\n\nmatplot\n\n\n\n\n\n\n\n\n\nMar 6, 2024\n\n\nstack\n\n\n\n\n\n\n\n\n\n\n\n\nmatplotlib demo\n\n\n\n\n\n\nmatplot\n\n\n\n\n\n\n\n\n\nMar 5, 2024\n\n\n叶叶叶\n\n\n\n\n\n\nNo matching items"
  }
]